(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{435:function(e,a,t){"use strict";t.r(a);var s=t(0),i=Object(s.a)({},function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("div",{staticClass:"content"},[e._m(0),e._v(" "),t("p",[e._v("kjar是jboss brms对jar的一种扩展.\nIn very few words, a KJAR is a standard JAR file that has some extra files included. A KJAR keeps the same .jar extension as a JAR file, because its basic file structure is identical to that of a JAR.\n“A JAR file is essentially a zip file that contains an optional META-INF directory.” 1 By contrast, a KJAR (“Knowledge artifact”) is specifically targeted for rules and processes which tend to be notated in XML or plain text.")]),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),t("p",[e._v("Nearly everything about a KJAR is really a targeted addition to a JAR file, so you can count on KJARs being almost entirely the same as JAR files. You can still use a MANIFEST.MF file to define package info, you can still use a beans.xml file to have CDI pick up classes, and you can still use popular files like logback.xml or log4j.xml for use with popular Java logging frameworks.")]),e._v(" "),e._m(4),e._v(" "),t("p",[e._v("The primary difference between building a KJAR and building a standard JAR is that the KJAR has a "),t("packaging",[e._v("kjar")]),e._v(" entry in its pom.xml and also contains the necessary "),t("code",[e._v("<plugin>")]),e._v("for kie-maven-plugin in that same file.")],1),e._v(" "),e._m(5),e._v(" "),t("p",[e._v("Officially, use of the KIE Maven plugin ensures that artifact resources are validated and pre-compiled, so use of that plugin is recommended at all times. However, if the rules/processes inside a KJAR are valid there are unlikely to be any execution problems whether they are running from a JAR or a KJAR. No kbase.cache would be created without the KIE Maven plugin 4, so it’s possible that users would encounter worse performance when attempting to run rules/processes from a JAR instead of a KJAR.")])])},[function(){var e=this.$createElement,a=this._self._c||e;return a("h2",{attrs:{id:"summary"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#summary","aria-hidden":"true"}},[this._v("#")]),this._v(" Summary")])},function(){var e=this.$createElement,a=this._self._c||e;return a("h2",{attrs:{id:"difference"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#difference","aria-hidden":"true"}},[this._v("#")]),this._v(" Difference")])},function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ul",[t("li",[e._v("Maven-based\n"),t("ul",[t("li",[e._v("JAR: Does not need not be built according to any specific folder structure, as long as a META-INF directory is present at the top level")]),e._v(" "),t("li",[e._v("KJAR: Conforms to the Maven Standard Directory Layout")])])]),e._v(" "),t("li",[e._v("Extra files\n"),t("ul",[t("li",[e._v("JAR: No specific files are required to be present")]),e._v(" "),t("li",[e._v("KJAR: Must contain a META-INF/kmodule.xml file, which in turn must contain at least a "),t("colgroup"),e._v("rrectly formatted "),t("code",[e._v("<kmodule>")]),e._v(" XML tag")])])]),e._v(" "),t("li",[e._v("Pre-compiled asset cache\n"),t("ul",[t("li",[e._v("JAR: Any code which is to be pre-compiled into bytecode is the responsibility of the build service which generates the JAR.")]),e._v(" "),t("li",[e._v("KJAR: Uses the KIE Maven plugin during build time, which automatically pre-compiles some rule and process assets into a cache ("),t("code",[e._v("META-INF/<kie-base-name>/kbase.cache")]),e._v("). (This cache is not complete, but can improve performance when loading rules/processes.) If the cache is not created, all assets will be built at runtime.")])])]),e._v(" "),t("li",[e._v("Deployment Descriptor (since v6.1)\n"),t("ul",[t("li",[e._v("JAR: No specific configurations or deployment types are specified, though various other frameworks or standards (such as Java EE) may create their own standards.")]),e._v(" "),t("li",[e._v("KJAR: If the file META-INF/kie-deployment-descriptor.xml exists, it is used automatically to determine various properties for executing rules and/or processes such as runtime strategy, event listeners, work item handlers, and more.")])])])])},function(){var e=this.$createElement,a=this._self._c||e;return a("h2",{attrs:{id:"same"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#same","aria-hidden":"true"}},[this._v("#")]),this._v(" Same")])},function(){var e=this.$createElement,a=this._self._c||e;return a("h2",{attrs:{id:"how-is-a-kjar-made"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-is-a-kjar-made","aria-hidden":"true"}},[this._v("#")]),this._v(" How is a KJAR made?")])},function(){var e=this.$createElement,a=this._self._c||e;return a("h2",{attrs:{id:"what-happens-if-i-generate-a-jar-instead-of-a-kjar"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-happens-if-i-generate-a-jar-instead-of-a-kjar","aria-hidden":"true"}},[this._v("#")]),this._v(" What happens if I generate a JAR instead of a KJAR?")])}],!1,null,null,null);i.options.__file="kjar.md";a.default=i.exports}}]);